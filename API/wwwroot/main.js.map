{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_modals/call-modal/call-modal.component.ts","./src/app/_modals/call-modal/call-modal.component.html","./src/app/_modals/confirm-modal/confirm-modal.component.ts","./src/app/_modals/confirm-modal/confirm-modal.component.html","./src/app/_modals/roles-modal/roles-modal.component.ts","./src/app/_modals/roles-modal/roles-modal.component.html","./src/app/_model/pagination.ts","./src/app/_model/user.ts","./src/app/_model/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_pipe/cast.pipe.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/call.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/busy.service.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts","./node_modules/peerjs/dist|sync"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_model/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]',\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole!: string[];\n  user!: User | null;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n    });\n  }\n  ngOnInit(): void {\n    if (!this.user?.roles || this.user?.roles == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user.roles.some((r) => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","<div class=\"form-group\">\n  <input\n    type=\"text\"\n    [class.is-valid]=\"ngControl.touched && ngControl.invalid\"\n    class=\"form-control\"\n    [formControl]=\"$any(ngControl.control)\"\n    placeholder=\"{{ label }}\"\n    bsDatepicker\n    [bsConfig]=\"bsConfig\"\n    [maxDate]=\"maxDate\"\n  />\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\n    {{ label }} is required\n  </div>\n</div>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig, DatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss'],\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string = '';\n  @Input() maxDate!: Date;\n  bsConfig: Partial<BsDatepickerConfig> = {\n    containerClass: 'theme-red',\n    dateInputFormat: 'DD MMMM YYYY',\n  };\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","<div class=\"form-group\">\n  <input\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type=\"{{ type }}\"\n    class=\"form-control\"\n    [formControl]=\"$any(ngControl.control)\"\n    placeholder=\"{{ label }}\"\n  />\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\n    Please enter a {{ label }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.minlength\" class=\"invalid-feedback\">\n    {{ label }} must be at least\n    {{ ngControl.control?.errors?.minlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.maxlength\" class=\"invalid-feedback\">\n    {{ label }} must be at most\n    {{ ngControl.control?.errors?.maxlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.isMatching\" class=\"invalid-feedback\">\n    Password do not match\n  </div>\n</div>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControl,\n  NgControl,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label!: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user?.roles.includes('Admin') || user?.roles.includes('Moderator'))\n          return true;\n        this.toastr.error('You cannot enter this area');\n        return false;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_model/user';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService){ }\n\n  canActivate(): Observable<boolean> {    \n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user) return true;\n        this.toastr.error('You shall not pass!');\n        return false;\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          debugger;\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof error.error === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 401:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_model/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private accountService: AccountService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let currentUser!: User | null;\n\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (currentUser = user));\n\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(private busyService: BusyService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { CallService } from 'src/app/_services/call.service';\n\n@Component({\n  selector: 'app-call-modal',\n  templateUrl: './call-modal.component.html',\n  styleUrls: ['./call-modal.component.scss'],\n})\nexport class CallModalComponent implements OnInit, OnDestroy {\n  isCallStarted!: boolean;\n  peerId!: string;\n\n  @ViewChild('localVideo') localVideo!: ElementRef<HTMLVideoElement>;\n  @ViewChild('remoteVideo') remoteVideo!: ElementRef<HTMLVideoElement>;\n\n  constructor(public bsModalRef: BsModalRef, public callService: CallService) {}\n\n  ngOnDestroy(): void {\n    this.callService.closeMediaCall();\n    this.callService.destroyPeer();\n  }\n\n  ngOnInit(): void {\n    this.callService.localStream$\n      .pipe(filter((res) => !!res))\n      .subscribe(\n        (stream) => (this.localVideo.nativeElement.srcObject = stream)\n      );\n    this.callService.remoteStream$\n      .pipe(filter((res) => !!res))\n      .subscribe(\n        (stream) => (this.remoteVideo.nativeElement.srcObject = stream)\n      );\n  }\n\n  endCall() {\n    this.callService.closeMediaCall();\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row p-2\">\n    <!-- <button mat-raised-button color=\"primary\" class=\"m-2\" [disabled]=\"this.callService.isCallStarted$ | async\" (click)=\"showModal(false)\">Start Call</button>\n    <button mat-raised-button class=\"m-2\" [disabled]=\"this.callService.isCallStarted$ | async\" (click)=\"showModal(true)\">Join Call</button> -->\n    <button\n      mat-raised-button\n      color=\"warn\"\n      class=\"m-2\"\n      [disabled]=\"!(this.callService.isCallStarted$ | async)\"\n      (click)=\"endCall()\"\n    >\n      End Call\n    </button>\n  </div>\n  <div class=\"row\">\n    <div class=\"col text-center\">\n      <div id=\"video-wrapper\">\n        <video\n          #remoteVideo\n          id=\"remote-video\"\n          poster=\"./assets/video-placeholder.gif\"\n          autoplay\n          playsinline\n        ></video>\n        <video\n          #localVideo\n          id=\"local-video\"\n          autoplay\n          playsinline\n          [muted]=\"true\"\n        ></video>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss'],\n})\nexport class ConfirmModalComponent implements OnInit {\n  title!: string;\n  message!: string;\n  btnOkText!: string;\n  btnCancelText!: string;\n  result!: boolean;\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n<div class=\"modal-body\">\n  {{ message }}\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_model/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.scss'],\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user!: User;\n  roles!: any[];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{ user.username }}</h4>\n  <button\n    type=\"button\"\n    class=\"close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"bsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [checked]=\"role.checked\"\n        value=\"role.name\"\n        (change)=\"role.checked = !role.checked\"\n        [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n      />\n      <label>{{ role.name }}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n    Cancel\n  </button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\n    Submit\n  </button>\n</div>\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result!: T;\r\n  pagination!: Pagination;\r\n}\r\n","export class User {\r\n  username!: string;\r\n  token!: string;\r\n  photoUrl!: string;\r\n  knownAs!: string;\r\n  gender!: string;\r\n  roles!: string[];\r\n}\r\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender!: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 6;\r\n  orderBy = 'lastActive';\r\n\r\n  constructor(user: User | null) {\r\n    this.gender = user?.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgxGalleryModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 4000,\n      positionClass: 'toast-bottom-right',\n    }),\n    TabsModule.forRoot(),\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n  ],\n})\nexport class SharedModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cast',\n  pure: true,\n})\nexport class CastPipe implements PipeTransform {\n  transform<T>(value: T, args?: any): T {\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_model/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MemberDetailResolver implements Resolve<Member> {\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_model/user';\nimport { PresenceService } from './presence.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User | null>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private presenceService: PresenceService\n  ) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presenceService.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: any) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presenceService.createHubConnection(user);\n        }\n        return user;\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presenceService.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles() {\n    return this.http.get<User[]>(this.baseUrl + 'admin/users-with-role');\n  }\n\n  updateUserRoles(username?: string, roles?: string[]) {\n    return this.http.post(\n      this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles,\n      {}\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as Peer from 'peerjs';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CallService {\n  peer!: Peer;\n  mediaCall!: Peer.MediaConnection;\n\n  localStreamBs = new BehaviorSubject<MediaStream | null>(null);\n  localStream$ = this.localStreamBs.asObservable();\n\n  remoteStreamBs = new BehaviorSubject<MediaStream | null>(null);\n  remoteStream$ = this.remoteStreamBs.asObservable();\n\n  isCallStartedBs = new Subject<boolean>();\n  isCallStarted$ = this.isCallStartedBs.asObservable();\n\n  constructor(private toastrService: ToastrService) {}\n\n  initPeer(): string {\n    let id = this.generateUniqueId();\n    if (!this.peer || this.peer.disconnected) {\n      const peerJsOptions: Peer.PeerJSOption = {\n        debug: 3,\n        config: {\n          iceServers: [\n            {\n              urls: [\n                'stun:stun1.l.google.com:19302',\n                'stun:stun2.l.google.com:19302',\n              ],\n            },\n          ],\n        },\n      };\n      try {\n        this.peer = new Peer(id, peerJsOptions);\n        return id;\n      } catch (error) {\n        console.error(error);\n        return '';\n      }\n    }\n    return id;\n  }\n\n  async establishMediaCall(remotePeerId: string) {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true,\n      });\n\n      const connection = this.peer.connect(remotePeerId);\n\n      connection.on('error', (error) => {\n        console.error(error);\n        this.toastrService.error(error);\n      });\n\n      this.mediaCall = this.peer.call(remotePeerId, stream);\n      if (!this.mediaCall) {\n        let errorMessage = 'Unable to connect to remote peer';\n        this.toastrService.error(errorMessage);\n        throw new Error(errorMessage);\n      }\n\n      this.localStreamBs.next(stream);\n      this.isCallStartedBs.next(true);\n\n      this.mediaCall.on('stream', (remoteStream) =>\n        this.remoteStreamBs.next(remoteStream)\n      );\n\n      this.mediaCall.on('error', (err) => {\n        console.error(err);\n        this.toastrService.error(err);\n        this.isCallStartedBs.next(false);\n      });\n\n      this.mediaCall.on('close', () => this.onCallClose());\n    } catch (error) {\n      console.error(error);\n      this.isCallStartedBs.next(false);\n    }\n  }\n\n  public async enableCallAnswer() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true,\n      });\n      this.localStreamBs.next(stream);\n      this.peer.on('call', async (call) => {\n        this.mediaCall = call;\n        this.isCallStartedBs.next(true);\n\n        this.mediaCall.answer(stream);\n        this.mediaCall.on('stream', (remoteStream) => {\n          this.remoteStreamBs.next(remoteStream);\n        });\n        this.mediaCall.on('error', (err) => {\n          this.toastrService.error(err);\n          this.isCallStartedBs.next(false);\n          console.error(err);\n        });\n        this.mediaCall.on('close', () => this.onCallClose());\n      });\n    } catch (ex) {\n      console.error(ex);\n      this.toastrService.error(ex);\n      this.isCallStartedBs.next(false);\n    }\n  }\n  onCallClose() {\n    (this.remoteStreamBs as BehaviorSubject<MediaStream>).value\n      .getTracks()\n      .forEach((track) => {\n        track.stop();\n      });\n    (this.remoteStreamBs as BehaviorSubject<MediaStream>).value\n      .getTracks()\n      .forEach((track) => {\n        track.stop();\n      });\n    this.toastrService.info('Call Ended');\n  }\n  public closeMediaCall() {\n    this.mediaCall?.close();\n    if (!this.mediaCall) {\n      this.onCallClose();\n    }\n    this.isCallStartedBs.next(false);\n  }\n  public destroyPeer() {\n    this.mediaCall?.close();\n    this.peer?.disconnect();\n    this.peer?.destroy();\n  }\n  generateUniqueId(): string {\n    return (Math.random().toString(36) + '0000000000000000000').substr(2, 16);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, Observer } from 'rxjs';\nimport { ConfirmModalComponent } from '../_modals/confirm-modal/confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer: Observer<boolean>) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_model/member';\nimport { PaginatedResult } from '../_model/pagination';\nimport { User } from '../_model/user';\nimport { UserParams } from '../_model/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  userParams!: UserParams;\n  user!: User | null;\n\n  constructor(\n    private httpClient: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    });\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(userParam: UserParams) {\n    this.userParams = userParam;\n  }\n\n  resetFilters() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) return of(response);\n\n    let params = getPaginationHeaders(\n      userParams.pageNumber,\n      userParams.pageSize\n    );\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(\n      this.baseUrl + 'users',\n      params,\n      this.httpClient\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      })\n    );\n  }\n\n  getMember(username: string | null) {\n    //\"find\" returns undefined if no value matches predicate\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.username === username);\n    if (member) return of(member);\n    return this.httpClient.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.httpClient.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    );\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.httpClient.put(\n      this.baseUrl + 'users/set-main-photo/' + photoId,\n      {}\n    );\n  }\n\n  deletePhoto(photoId: number) {\n    return this.httpClient.delete(\n      this.baseUrl + 'users/delete-photo/' + photoId\n    );\n  }\n\n  addLikes(username: string) {\n    return this.httpClient.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber: number, pageSize: number) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(\n      this.baseUrl + 'likes',\n      params,\n      this.httpClient\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BusyService } from '../busy.service';\r\nimport { Group } from '../_model/group';\r\nimport { Message } from '../_model/message';\r\nimport { User } from '../_model/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection!: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]);\r\n      });\r\n    });\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some((x) => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop().catch((error) => console.log(error));\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber: number, pageSize: number, container: string) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'Messages/thread/' + username\r\n    );\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection\r\n      .invoke('SendMessage', {\r\n        recipientUsername: username,\r\n        content,\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_model/pagination';\r\n\r\nexport function getPaginatedResult<T>(\r\n  url: string,\r\n  params: HttpParams,\r\n  http: HttpClient\r\n) {\r\n  const paginatedResults: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map((response) => {\r\n      paginatedResults.result = response.body as T;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResults.pagination = JSON.parse(\r\n          response.headers.get('Pagination') || ''\r\n        );\r\n      }\r\n      return paginatedResults;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) {}\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch((error) => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([\n          ...usernames.filter((x) => x !== username),\n        ]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toastr\n        .info(knownAs + ' has sent you a new message')\n        .onTap.pipe(take(1))\n        .subscribe(() =>\n          this.router.navigateByUrl('/members/' + username + '?tab=3')\n        );\n    });\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch((error) => console.log(error));\n  }\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"User management\" *appHasRole=\"['Admin']\">\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.scss']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/_modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_model/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss'],\n})\nexport class UserManagementComponent implements OnInit {\n  users!: User[];\n  bsModalRef!: BsModalRef;\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user),\n      },\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values: any) => {\n      const rolesToUpdate = {\n        roles: [\n          ...values\n            .filter((el: any) => el.checked === true)\n            .map((el: any) => el.name),\n        ],\n      };\n      if (rolesToUpdate) {\n        this.adminService\n          .updateUserRoles(user.username, rolesToUpdate.roles)\n          .subscribe(() => {\n            user.roles = [...rolesToUpdate.roles];\n          });\n      }\n    });\n  }\n\n  private getRolesArray(user: User) {\n    const roles: any[] = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach((role) => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%\">Username</th>\n      <th style=\"width: 40%\">Active roles</th>\n      <th style=\"width: 30%\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{ user?.username }}</td>\n      <td>{{ user?.roles }}</td>\n      <td>\n        <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\n          Edit role\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'members',\n        component: MemberListComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'members/:username',\n        component: MemberDetailComponent,\n        resolve: { member: MemberDetailResolver },\n      },\n      {\n        path: 'member/edit',\n        component: MemberEditComponent,\n        canDeactivate: [PreventUnsavedChangesGuard],\n      },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },\n      {\n        path: 'admin',\n        component: AdminPanelComponent,\n        canActivate: [AdminGuard],\n      },\n    ],\n  },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', component: HomeComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_model/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private accountService: AccountService,\n    private presenceService: PresenceService\n  ) {}\n\n  ngOnInit(): void {\n    this.setCurrentUsers();\n  }\n  title = 'Dating App';\n  users: any;\n\n  setCurrentUsers() {\n    const u = localStorage.getItem('user');\n    const user: User = u != null ? JSON.parse(u) : null;\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presenceService.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\n  <h3>Loading...</h3>\n</ngx-spinner>\n<app-nav></app-nav>\n<div class=\"container\" style=\"margin-top: 100px\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { CastPipe } from './_pipe/cast.pipe';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './_modals/roles-modal/roles-modal.component';\nimport { ConfirmModalComponent } from './_modals/confirm-modal/confirm-modal.component';\nimport { CallModalComponent } from './_modals/call-modal/call-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    ServerErrorComponent,\n    NotFoundComponent,\n    TextInputComponent,\n    CastPipe,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmModalComponent,\n    CallModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333',\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1>Not found</h1>\n  <button class=\"btn btn-info btn-lg\" routerLink=\"/\">\n    Return to home page\n  </button>\n</div>\n","<h4>\n  Internal server error - refreshing the page will make the error disappear!\n</h4>\n<ng-container *ngIf=\"error\">\n  <h5 class=\"text-danger\">Error: {{ error.message }}</h5>\n  <p class=\"font-weight-bold\">\n    Note: If you are seeing this then Angular is probably not to blame\n  </p>\n  <p>What to do next?</p>\n  <ol>\n    <li>Open the chrome dev tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - make sure it is correct</li>\n    <li>\n      Reproduce the error in Postman - if we see the same response, then the\n      issue is not with Angular\n    </li>\n  </ol>\n  <p>\n    Following is the stack trace - this is where your investigation should\n    start!\n  </p>\n  <code class=\"mt-5\" style=\"background-color: whitesmoke\">{{\n    error.details\n  }}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss'],\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    console.log(navigation);\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find you finds</h1>\n    <p class=\"lead\">\n      Come on in to find your friends... all you need to do is sign up!\n    </p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">\n        Register\n      </button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register\n          (cancelRegistration)=\"cancelRegisterMode($event)\"\n        ></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  users: any;\n\n  constructor(private http: HttpClient,) { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean){\n    this.registerMode = event;\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{ predicate === \"liked\" ? \"Member I like\" : \"Member who like me\" }}</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"btn-group\" name=\"predicate\">\n      <button\n        class=\"btn btn-primary\"\n        btnRadio=\"liked\"\n        [(ngModel)]=\"predicate\"\n        (click)=\"loadLikes()\"\n      >\n        Members i like\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        btnRadio=\"likedBy\"\n        [(ngModel)]=\"predicate\"\n        (click)=\"loadLikes()\"\n      >\n        Members who like me\n      </button>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div *ngFor=\"let member of members\">\n      <app-member-card [member]=\"$any(member)\"></app-member-card>\n    </div>\n  </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_model/member';\nimport { Pagination } from '../_model/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.scss'],\n})\nexport class ListsComponent implements OnInit {\n  members!: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination!: Pagination;\n\n  constructor(private memberService: MembersService) {}\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\n      .subscribe((response) => {\n        this.members = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<div class=\"container d-flex justify-content-center\">\n  <div class=\"card p-3 mt-3\">\n    <div class=\"first\">\n      <div\n        class=\"\n          time\n          d-flex\n          flex-row\n          align-items-center\n          justify-content-between\n          mt-3\n        \"\n      ></div>\n    </div>\n    <div class=\"second d-flex flex-row mt-2\">\n      <div class=\"image mr-3\">\n        <img\n          src=\"{{ member.photoUrl || './assets/default-avatar.jpg' }}\"\n          alt=\"{{ member.knownAs }}\"\n          class=\"rounded-circle\"\n          width=\"60\"\n        />\n      </div>\n      <div class=\"\">\n        <div class=\"d-flex flex-row mb-1\">\n          <a routerLink=\"/members/{{ member.username }}\"\n            >@{{ member.username }}</a\n          >\n          <div class=\"d-flex align-items-center\">\n            <span\n              class=\"is-online ml-1\"\n              *ngIf=\"(presence.onlineUsers$ | async)?.includes(member.username)\"\n              ><i class=\"fa fa-user mr-2\"></i\n            ></span>\n            <span\n              class=\"hour ml-1\"\n              *ngIf=\"\n                !(presence.onlineUsers$ | async)?.includes(member.username)\n              \"\n              ><i class=\"fa fa-clock-o clock\"></i>\n              {{ member.lastActive | timeago }}</span\n            >\n          </div>\n        </div>\n        <div>\n          <button\n            (click)=\"addLike(member)\"\n            class=\"btn btn-outline-dark btn-sm px-2\"\n          >\n            <i class=\"fa fa-heart\"></i>\n          </button>\n          <button\n            routerLink=\"/members/{{ member.username }}\"\n            class=\"btn btn-outline-dark btn-sm\"\n          >\n            See Profile\n          </button>\n          <button\n            routerLink=\"/members/{{ member.username }}\"\n            [queryParams]=\"{ tab: 3 }\"\n            class=\"btn btn-outline-dark btn-sm\"\n          >\n            <i class=\"fa fa-comment-o\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    <hr class=\"line-color\" />\n    <h6>{{ member.knownAs }}, {{ member.age }}</h6>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_model/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.scss'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member!: Member;\n\n  constructor(\n    private memberService: MembersService,\n    private toastr: ToastrService,\n    public presence: PresenceService\n  ) {}\n\n  ngOnInit(): void {}\n\n  addLike(member: Member) {\n    this.memberService.addLikes(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NgxGalleryAnimation,\n  NgxGalleryImage,\n  NgxGalleryOptions,\n} from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/internal/operators/take';\nimport { Member } from 'src/app/_model/member';\nimport { Message } from 'src/app/_model/message';\nimport { User } from 'src/app/_model/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.scss'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', { static: true }) memberTabs!: TabsetComponent;\n  member!: Member;\n  galleryOptions!: NgxGalleryOptions[];\n  galleryImages!: NgxGalleryImage[];\n  activeTab!: TabDirective;\n  messages: Message[] = [];\n  user!: User;\n\n  constructor(\n    private memberService: MembersService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    public presence: PresenceService,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user || new User()));\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.member = data.member;\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService\n      .getMessageThread(this.member.username)\n      .subscribe((messages) => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading == 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/default-avatar.jpg' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-img-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div\n          class=\"mb-2\"\n          *ngIf=\"(presence.onlineUsers$ | async)?.includes(member.username)\"\n        >\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\n        </div>\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">\n            Message\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab\n        heading=\"About {{ member.knownAs }}\"\n        (selectTab)=\"onTabActivated($event)\"\n      >\n        <h4>Description</h4>\n        <p>{{ member.information }}</p>\n        <h4>looking for</h4>\n        <p>{{ member.lookingFor }}</p>\n      </tab>\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\n        <h4>Interests</h4>\n        <p>{{ member.interests }}</p>\n      </tab>\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\n        <ngx-gallery\n          [options]=\"galleryOptions\"\n          [images]=\"galleryImages\"\n          style=\"display: inline-block; margin-bottom: 20px\"\n        ></ngx-gallery>\n      </tab>\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_model/member';\nimport { User } from 'src/app/_model/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.scss'],\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm!: NgForm;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\n    $event: any\n  ) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  member!: Member;\n  user!: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService,\n    private toasterService: ToastrService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user || new User()));\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user?.username).subscribe((member) => {\n      this.member = member;\n    });\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toasterService.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    });\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n  <div class=\"col-4\">\n    <h1>Your profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n      <strong>Information: </strong>you have made changes, any unsaved changes\n      will lost\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/default-avatar.jpg' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-img-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          [disabled]=\"!editForm.dirty\"\n          form=\"editForm\"\n          class=\"btn btn-success btn-block\"\n        >\n          Save Changes\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"About {{ member.knownAs }}\">\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n          <h4>Description</h4>\n          <textarea\n            [(ngModel)]=\"member.information\"\n            class=\"form-control\"\n            name=\"information\"\n            rows=\"6\"\n          ></textarea>\n          <h4>Looking for</h4>\n          <textarea\n            [(ngModel)]=\"member.lookingFor\"\n            class=\"form-control\"\n            name=\"lookingFor\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea\n            [(ngModel)]=\"member.interests\"\n            class=\"form-control\"\n            name=\"interests\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Location Details:</h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City:</label>\n            <input\n              type=\"text\"\n              name=\"city\"\n              [(ngModel)]=\"member.city\"\n              class=\"form-control mx-2\"\n            />\n            <label for=\"country\">Country:</label>\n            <input\n              type=\"text\"\n              name=\"country\"\n              [(ngModel)]=\"member.country\"\n              class=\"form-control mx-2\"\n            />\n          </div>\n        </form>\n      </tab>\n      <tab heading=\"Edit Photos\">\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form\n    #form=\"ngForm\"\n    class=\"form-inline mb-3\"\n    (ngSubmit)=\"loadMembers()\"\n    autocomplete=\"off\"\n  >\n    <div class=\"form-group\">\n      <label>Age from:</label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"minAge\"\n        [(ngModel)]=\"userParams.minAge\"\n      />\n    </div>\n    <div class=\"form-group px-2\">\n      <label>Age to:</label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\"\n      />\n    </div>\n    <div class=\"form-group px-2\">\n      <label>Show:</label>\n      <select\n        class=\"form-control ml-1\"\n        [(ngModel)]=\"userParams.gender\"\n        name=\"gender\"\n        style=\"width: 130px\"\n      >\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{ gender.display }}\n        </option>\n      </select>\n    </div>\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">\n      Reset Filters\n    </button>\n    <div class=\"col\">\n      <div class=\"button-group float-right\">\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"lastActive\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Last Active\n        </button>\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"created\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Newest Members\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"row\">\n  <div *ngFor=\"let member of members\">\n    <app-member-card [member]=\"member\"></app-member-card>\n  </div>\n</div>\n<div class=\"d-flex justify-content-center mt-2\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_model/member';\nimport { Pagination } from 'src/app/_model/pagination';\nimport { User } from 'src/app/_model/user';\nimport { UserParams } from 'src/app/_model/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  members!: Member[];\n  pagination!: Pagination;\n  userParams!: UserParams;\n  user!: User | null;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetFilters();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class=\"card\">\r\n  <div\r\n    class=\"card-body\"\r\n    #scrollMe\r\n    style=\"overflow: scroll; height: 535px\"\r\n    [scrollTop]=\"scrollMe.scrollHeight\"\r\n  >\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet... say hi by using the message box below\r\n    </div>\r\n    <ul\r\n      *ngIf=\"(messageService.messageThread$ | async)!.length > 0\"\r\n      class=\"chat\"\r\n    >\r\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img\r\n              src=\"{{\r\n                message.senderPhotoUrl || './assets/default-avatar.jpg'\r\n              }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n              class=\"rounded-circle\"\r\n            />\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-0\">{{\r\n                  message.messageSent | timeago\r\n                }}</span>\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    !message.dateRead && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (unread)\r\n                </span>\r\n                <span\r\n                  class=\"text-success\"\r\n                  *ngIf=\"\r\n                    message.dateRead && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (read {{ message.dateRead | timeago }})\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{ message.content }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control input-sm\"\r\n          required\r\n          name=\"messageContent\"\r\n          [(ngModel)]=\"messageContent\"\r\n          placeholder=\"send a private message\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            [disabled]=\"!messageForm.valid || loading\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n            <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_model/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.scss'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm!: NgForm;\r\n  @Input() messages!: Message[];\r\n  @Input() username!: string;\r\n  messageContent!: string;\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      })\r\n      .finally(() => (this.loading = false));\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_model/member';\nimport { Photo } from 'src/app/_model/photo';\nimport { User } from 'src/app/_model/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.scss'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member!: Member;\n  uploader!: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  user!: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user || new User()));\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if (photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach((p) => {\n        if (p.isMain) p.isMain = false;\n        if (p.id == photo.id) p.isMain = true;\n      });\n    });\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter((x) => x.id !== photoId);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n    <img\n      src=\"{{ photo.url }}\"\n      alt=\"{{ photo.url }}\"\n      class=\"img-thumbnail p-1\"\n    />\n    <div class=\"text-center\">\n      <button\n        [disabled]=\"photo.isMain\"\n        (click)=\"setMainPhoto(photo)\"\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\n        class=\"btn btn-sm\"\n      >\n        Main\n      </button>\n      <button\n        [disabled]=\"photo.isMain\"\n        (click)=\"deletePhoto(photo.id)\"\n        class=\"btn btn-sm btn-danger\"\n      >\n        <i class=\"fa fa-trash\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"row mt-3\">\n  <div class=\"col-md-3\">\n    <h3>Add Photos</h3>\n    <div\n      ng2FileDrop\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\n      (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\"\n      class=\"card bd-faded p-3 text-center mb-3 my-drop-zone\"\n    >\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop photos down\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div\n    class=\"col-md-9\"\n    style=\"margin-bottom: 40px\"\n    *ngIf=\"uploader?.queue?.length\"\n  >\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td>\n            <strong>{{ item?.file?.name }}</strong>\n          </td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress\">\n          <div\n            class=\"progress-bar\"\n            role=\"progressbar\"\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\n          ></div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-success btn-s\"\n        (click)=\"uploader.uploadAll()\"\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\n      >\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-warning btn-s\"\n        (click)=\"uploader.cancelAll()\"\n        [disabled]=\"!uploader.isUploading\"\n      >\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-s\"\n        (click)=\"uploader.clearQueue()\"\n        [disabled]=\"!uploader.queue.length\"\n      >\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n  </div>\n</div>\n","<div class=\"row mb-4\">\n  <div class=\"btn-group\" name=\"container\">\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Unread\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope\"></i> Unread\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Inbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope-open\"></i> Inbox\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Outbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-paper-plane\"></i> Outbox\n    </button>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No messages</h3>\n</div>\n<div class=\"row\" *ngIf=\"messages.length > 0\">\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\n    <tr>\n      <th style=\"width: 40%\">Message</th>\n      <th style=\"width: 20%\">From / To</th>\n      <th style=\"width: 20%\">Sent / Receive</th>\n      <th style=\"width: 20%\"></th>\n    </tr>\n    <tr\n      [hidden]=\"loading\"\n      *ngFor=\"let message of messages\"\n      routerLink=\"{{\n        container === 'Outbox'\n          ? '/members/' + message.recipientUsername\n          : '/members/' + message.senderUsername\n      }}\"\n      [queryParams]=\"{ tab: 3 }\"\n    >\n      <td>{{ message.content }}</td>\n      <td>\n        <div *ngIf=\"container === 'Outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{\n              message.recipientPhotoUrl || './assets/default-avatar.jpg'\n            }}\"\n            alt=\"{{ message.recipientUsername }}\"\n          />\n          <strong>{{ message.recipientUsername | titlecase }}</strong>\n        </div>\n        <div *ngIf=\"container !== 'Outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{ message.senderPhotoUrl || './assets/default-avatar.jpg' }}\"\n            alt=\"{{ message.senderUsername }}\"\n          />\n          <strong>{{ message.senderUsername | titlecase }}</strong>\n        </div>\n      </td>\n      <td>{{ message.messageSent | timeago }}</td>\n      <td>\n        <button\n          (click)=\"$event.stopPropagation()\"\n          (click)=\"deleteMessage(message.id)\"\n          class=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_model/message';\nimport { Pagination } from '../_model/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination!: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(\n    private messageService: MessageService,\n    private confirmService: ConfirmService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService\n      .getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe((response) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService\n      .confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe((result) => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() => {\n            this.messages.splice(\n              this.messages.findIndex((m) => m.id == id),\n              1\n            );\n          });\n        }\n      });\n  }\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Dating App</a>\n    <ul class=\"navbar-nav mr-auto mb-2 mb-md-0\">\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/members\"\n            >Matched</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/lists\"\n            >List</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/messages\"\n            >Messages</a\n          >\n        </li>\n        <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/admin\"\n            >Admin</a\n          >\n        </li>\n      </ng-container>\n    </ul>\n    <div\n      class=\"dropdown\"\n      *ngIf=\"accountService.currentUser$ | async as user\"\n      dropdown\n    >\n      <img\n        src=\"{{ user.photoUrl || './assets/default-avatar.jpg' }}\"\n        alt=\"{{ user.username }}\"\n      />\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle\n        >Welcome {{ user.knownAs || user.username | titlecase }}</a\n      >\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" routerLink=\"/member/edit\">Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n    <form\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"login()\"\n      autocomplete=\"off\"\n    >\n      <input\n        name=\"username\"\n        [(ngModel)]=\"model.username\"\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        placeholder=\"Username\"\n      />\n      <input\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n        class=\"form-control mr-sm-2\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <button class=\"btn btn-outline-success\" type=\"submit\">Login</button>\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_model/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  model:any = {};\n\n  constructor(public accountService: AccountService\n    ,private router: Router\n    ,private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.accountService.login(this.model).subscribe(user => {\n      this.router.navigateByUrl('/members');\n    }, error =>{  \n      this.toastr.error(error.error);\n    });\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }  \n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegistration = new EventEmitter();\n  registerForm: FormGroup = new FormGroup({});\n  maxDate = new Date();\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateofBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(16),\n        ],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, this.matchValues('password')],\n      ],\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.get(matchTo)?.value\n        ? null\n        : { isMatching: true };\n    };\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        this.validationErrors = error;\n      }\n    );\n  }\n\n  cancel() {\n    this.cancelRegistration.emit(false);\n  }\n}\n","<form\n  [formGroup]=\"registerForm\"\n  (ngSubmit)=\"registerForm.valid && register()\"\n  autocomplete=\"off\"\n>\n  <h2 class=\"text-center text-primary\">Sign up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\">I am a: &nbsp;</label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" value=\"male\" formControlName=\"gender\" /> Male\n    </label>\n    <label class=\"radio-inline\">\n      <input\n        type=\"radio\"\n        value=\"female\"\n        formControlName=\"gender\"\n        class=\"ml-2\"\n      />\n      female\n    </label>\n  </div>\n  <app-text-input\n    formControlName=\"username\"\n    [label]=\"'Username'\"\n  ></app-text-input>\n  <app-text-input\n    formControlName=\"knownAs\"\n    [label]=\"'Known As'\"\n  ></app-text-input>\n  <app-date-input\n    formControlName=\"dateofBirth\"\n    [label]=\"'Date of Birth'\"\n    [maxDate]=\"maxDate\"\n  ></app-date-input>\n  <app-text-input formControlName=\"city\" [label]=\"'City'\"></app-text-input>\n  <app-text-input\n    formControlName=\"country\"\n    [label]=\"'Country'\"\n  ></app-text-input>\n  <app-text-input\n    formControlName=\"password\"\n    [type]=\"'password'\"\n    [label]=\"'Password'\"\n  ></app-text-input>\n  <app-text-input\n    formControlName=\"confirmPassword\"\n    [type]=\"'password'\"\n    [label]=\"'Confirm Password'\"\n  ></app-text-input>\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{ error }}\n      </li>\n    </ul>\n  </div>\n  <div class=\"form-group text-center\">\n    <button\n      [disabled]=\"!registerForm.valid\"\n      class=\"btn btn-success mr-2\"\n      type=\"submit\"\n    >\n      Register\n    </button>\n    <button class=\"btn btn-default\" (click)=\"cancel()\" type=\"button\">\n      Cancel\n    </button>\n  </div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 5784;\nmodule.exports = webpackEmptyContext;"],"sourceRoot":"webpack:///"}