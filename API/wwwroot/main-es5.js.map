{"version":3,"sources":["webpack:///src/app/_forms/date-input/date-input.component.ts","webpack:///src/app/_forms/date-input/date-input.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/admin/photo-management/photo-management.component.ts","webpack:///src/app/admin/photo-management/photo-management.component.html","webpack:///src/app/errors/not-found/not-found.component.ts","webpack:///src/app/errors/not-found/not-found.component.html","webpack:///src/app/_services/account.service.ts","webpack:///src/app/errors/server-error/server-error.component.ts","webpack:///src/app/errors/server-error/server-error.component.html","webpack:///src/app/_directives/has-role.directive.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/_interceptors/jwt.interceptor.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/_modules/shared.module.ts","webpack:///src/app/_interceptors/error.interceptor.ts","webpack:///src/app/_guards/admin.guard.ts","webpack:///src/app/_model/pagination.ts","webpack:///src/app/_services/admin.service.ts","webpack:///src/app/admin/user-management/user-management.component.ts","webpack:///src/app/admin/user-management/user-management.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_services/message.service.ts","webpack:///src/app/_modals/roles-modal/roles-modal.component.ts","webpack:///src/app/_modals/roles-modal/roles-modal.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/busy.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_interceptors/loading.interceptor.ts","webpack:///src/app/_modals/confirm-modal/confirm-modal.component.ts","webpack:///src/app/_modals/confirm-modal/confirm-modal.component.html","webpack:///src/app/_model/userParams.ts","webpack:///src/app/_services/members.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/_resolvers/member-detailed.resolver.ts","webpack:///src/app/_forms/text-input/text-input.component.ts","webpack:///src/app/_forms/text-input/text-input.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/_services/presence.service.ts","webpack:///src/app/_pipe/cast.pipe.ts","webpack:///src/app/_model/user.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/_services/paginationHelper.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_services/confirm.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DateInputComponent","ngControl","label","bsConfig","containerClass","dateInputFormat","valueAccessor","obj","fn","selector","templateUrl","styleUrls","maxDate","RegisterComponent","accountService","toastr","fb","router","cancelRegistration","registerForm","Date","validationErrors","initializeForm","setFullYear","getFullYear","group","gender","username","required","knownAs","dateofBirth","city","country","password","minLength","maxLength","confirmPassword","matchValues","matchTo","control","value","parent","get","isMatching","register","subscribe","response","navigateByUrl","error","emit","cancel","MemberMessagesComponent","messageService","loading","sendMessage","messageContent","then","messageForm","reset","changeDetection","OnPush","messages","PhotoManagementComponent","NotFoundComponent","AccountService","http","presenceService","baseUrl","apiUrl","currentUserSource","currentUser$","asObservable","model","post","pipe","user","setCurrentUser","createHubConnection","roles","getDecodedToken","token","role","Array","isArray","push","localStorage","setItem","JSON","stringify","next","removeItem","stopHubConnection","parse","atob","split","providedIn","ServerErrorComponent","navigation","getCurrentNavigation","console","log","extras","state","HasRoleDirective","viewContainerRef","templateRef","clear","some","r","appHasRole","includes","createEmbeddedView","HomeComponent","registerMode","event","environment","production","hubUrl","JwtInterceptor","request","currentUser","clone","setHeaders","Authorization","handle","$event","stopPropagation","MessagesComponent","confirmService","container","pageNumber","pageSize","loadMessages","getMessages","result","pagination","id","confirm","deleteMessage","splice","findIndex","m","page","SharedModule","forRoot","timeOut","positionClass","declarations","imports","exports","ErrorInterceptor","status","errors","modalStateErrors","key","flat","statusText","navigationExtras","AdminGuard","PaginatedResult","AdminService","UserManagementComponent","adminService","modalService","getUsersWithRoles","users","config","initialState","getRolesArray","bsModalRef","show","content","updateSelectedRoles","values","rolesToUpdate","filter","el","checked","map","name","updateUserRoles","userRoles","availableRoles","forEach","isMatch","userRole","MemberDetailComponent","memberService","route","presence","routeReuseStrategy","shouldReuseRoute","data","member","queryParams","params","tab","selectTab","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photos","photo","small","url","medium","big","getMessageThread","tabId","memberTabs","tabs","active","activeTab","heading","length","onTabActivated","AuthGuard","MessageService","busyService","messageThreadSource","messageThread$","otherUsername","busy","hubConnection","withUrl","accessTokenFactory","withAutomaticReconnect","build","start","idle","on","message","connections","x","dateRead","now","stop","append","invoke","recipientUsername","RolesModalComponent","hide","updateRoles","MemberListComponent","genderList","display","userParams","getUserParams","loadMembers","setUserParams","getMembers","members","resetFilters","BusyService","spinnerService","busyRequestCount","undefined","type","bdColor","color","AppComponent","title","setCurrentUsers","u","getItem","LoadingInterceptor","ConfirmModalComponent","decline","UserParams","minAge","maxAge","orderBy","MembersService","httpClient","memberCache","Map","userParam","Object","join","toString","set","reduce","arr","elem","concat","find","put","index","indexOf","photoId","predicate","AppModule","provide","useClass","multi","providers","bootstrap","uploader","PhotoEditorComponent","hasBaseDropZoneOver","initializeUploader","e","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","headers","isMain","photoUrl","setMainPhoto","p","deletePhoto","fileOverBase","MemberDetailResolver","getMember","paramMap","TextInputComponent","ListsComponent","loadLikes","getLikes","NavComponent","login","logout","MemberCardComponent","addLikes","success","addLike","PresenceService","onlineUsersSource","onlineUsers$","usernames","info","onTap","CastPipe","args","pure","User","AdminPanelComponent","MemberEditComponent","toasterService","editForm","dirty","returnValue","loadMember","updateMember","unloadNotification","getPaginatedResult","paginatedResults","observe","body","getPaginationHeaders","PreventUnsavedChangesGuard","component","routes","path","runGuardsAndResolvers","canActivate","children","resolve","canDeactivate","pathMatch","AppRoutingModule","ConfirmService","btnOkText","btnCancelText","getResult","observer","subscription","onHidden","complete","unsubscribe","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig, DatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss'],\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string = '';\n  @Input() maxDate!: Date;\n  bsConfig: Partial<BsDatepickerConfig> = {\n    containerClass: 'theme-red',\n    dateInputFormat: 'DD MMMM YYYY',\n  };\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","<div class=\"form-group\">\n  <input\n    type=\"text\"\n    [class.is-valid]=\"ngControl.touched && ngControl.invalid\"\n    class=\"form-control\"\n    [formControl]=\"$any(ngControl.control)\"\n    placeholder=\"{{ label }}\"\n    bsDatepicker\n    [bsConfig]=\"bsConfig\"\n    [maxDate]=\"maxDate\"\n  />\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\n    {{ label }} is required\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegistration = new EventEmitter();\n  registerForm: FormGroup = new FormGroup({});\n  maxDate = new Date();\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateofBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(16),\n        ],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, this.matchValues('password')],\n      ],\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.get(matchTo)?.value\n        ? null\n        : { isMatching: true };\n    };\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        this.validationErrors = error;\n      }\n    );\n  }\n\n  cancel() {\n    this.cancelRegistration.emit(false);\n  }\n}\n","<form\n  [formGroup]=\"registerForm\"\n  (ngSubmit)=\"registerForm.valid && register()\"\n  autocomplete=\"off\"\n>\n  <h2 class=\"text-center text-primary\">Sign up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\">I am a: &nbsp;</label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" value=\"male\" formControlName=\"gender\" /> Male\n    </label>\n    <label class=\"radio-inline\">\n      <input\n        type=\"radio\"\n        value=\"female\"\n        formControlName=\"gender\"\n        class=\"ml-2\"\n      />\n      female\n    </label>\n  </div>\n  <app-text-input\n    formControlName=\"username\"\n    [label]=\"'Username'\"\n  ></app-text-input>\n  <app-text-input\n    formControlName=\"knownAs\"\n    [label]=\"'Known As'\"\n  ></app-text-input>\n  <app-date-input\n    formControlName=\"dateofBirth\"\n    [label]=\"'Date of Birth'\"\n    [maxDate]=\"maxDate\"\n  ></app-date-input>\n  <app-text-input formControlName=\"city\" [label]=\"'City'\"></app-text-input>\n  <app-text-input\n    formControlName=\"country\"\n    [label]=\"'Country'\"\n  ></app-text-input>\n  <app-text-input\n    formControlName=\"password\"\n    [type]=\"'password'\"\n    [label]=\"'Password'\"\n  ></app-text-input>\n  <app-text-input\n    formControlName=\"confirmPassword\"\n    [type]=\"'password'\"\n    [label]=\"'Confirm Password'\"\n  ></app-text-input>\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{ error }}\n      </li>\n    </ul>\n  </div>\n  <div class=\"form-group text-center\">\n    <button\n      [disabled]=\"!registerForm.valid\"\n      class=\"btn btn-success mr-2\"\n      type=\"submit\"\n    >\n      Register\n    </button>\n    <button class=\"btn btn-default\" (click)=\"cancel()\" type=\"button\">\n      Cancel\n    </button>\n  </div>\n</form>\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_model/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.scss'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm!: NgForm;\r\n  @Input() messages!: Message[];\r\n  @Input() username!: string;\r\n  messageContent!: string;\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      })\r\n      .finally(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div\r\n    class=\"card-body\"\r\n    #scrollMe\r\n    style=\"overflow: scroll; height: 535px\"\r\n    [scrollTop]=\"scrollMe.scrollHeight\"\r\n  >\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet... say hi by using the message box below\r\n    </div>\r\n    <ul\r\n      *ngIf=\"(messageService.messageThread$ | async)!.length > 0\"\r\n      class=\"chat\"\r\n    >\r\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img\r\n              src=\"{{\r\n                message.senderPhotoUrl || './assets/default-avatar.jpg'\r\n              }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n              class=\"rounded-circle\"\r\n            />\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-0\">{{\r\n                  message.messageSent | timeago\r\n                }}</span>\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    !message.dateRead && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (unread)\r\n                </span>\r\n                <span\r\n                  class=\"text-success\"\r\n                  *ngIf=\"\r\n                    message.dateRead && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (read {{ message.dateRead | timeago }})\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{ message.content }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control input-sm\"\r\n          required\r\n          name=\"messageContent\"\r\n          [(ngModel)]=\"messageContent\"\r\n          placeholder=\"send a private message\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            [disabled]=\"!messageForm.valid || loading\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n            <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.scss']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1>Not found</h1>\n  <button class=\"btn btn-info btn-lg\" routerLink=\"/\">\n    Return to home page\n  </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_model/user';\nimport { PresenceService } from './presence.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User | null>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private presenceService: PresenceService\n  ) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presenceService.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: any) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presenceService.createHubConnection(user);\n        }\n        return user;\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presenceService.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss'],\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    console.log(navigation);\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {}\n}\n","<h4>\n  Internal server error - refreshing the page will make the error disappear!\n</h4>\n<ng-container *ngIf=\"error\">\n  <h5 class=\"text-danger\">Error: {{ error.message }}</h5>\n  <p class=\"font-weight-bold\">\n    Note: If you are seeing this then Angular is probably not to blame\n  </p>\n  <p>What to do next?</p>\n  <ol>\n    <li>Open the chrome dev tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - make sure it is correct</li>\n    <li>\n      Reproduce the error in Postman - if we see the same response, then the\n      issue is not with Angular\n    </li>\n  </ol>\n  <p>\n    Following is the stack trace - this is where your investigation should\n    start!\n  </p>\n  <code class=\"mt-5\" style=\"background-color: whitesmoke\">{{\n    error.details\n  }}</code>\n</ng-container>\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_model/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]',\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole!: string[];\n  user!: User | null;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n    });\n  }\n  ngOnInit(): void {\n    if (!this.user?.roles || this.user?.roles == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user.roles.some((r) => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  users: any;\n\n  constructor(private http: HttpClient,) { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean){\n    this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find you finds</h1>\n    <p class=\"lead\">\n      Come on in to find your friends... all you need to do is sign up!\n    </p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">\n        Register\n      </button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register\n          (cancelRegistration)=\"cancelRegisterMode($event)\"\n        ></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_model/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private accountService: AccountService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let currentUser!: User | null;\n\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (currentUser = user));\n\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_model/message';\nimport { Pagination } from '../_model/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination!: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(\n    private messageService: MessageService,\n    private confirmService: ConfirmService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService\n      .getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe((response) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService\n      .confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe((result) => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() => {\n            this.messages.splice(\n              this.messages.findIndex((m) => m.id == id),\n              1\n            );\n          });\n        }\n      });\n  }\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}\n","<div class=\"row mb-4\">\n  <div class=\"btn-group\" name=\"container\">\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Unread\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope\"></i> Unread\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Inbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope-open\"></i> Inbox\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Outbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-paper-plane\"></i> Outbox\n    </button>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No messages</h3>\n</div>\n<div class=\"row\" *ngIf=\"messages.length > 0\">\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\n    <tr>\n      <th style=\"width: 40%\">Message</th>\n      <th style=\"width: 20%\">From / To</th>\n      <th style=\"width: 20%\">Sent / Receive</th>\n      <th style=\"width: 20%\"></th>\n    </tr>\n    <tr\n      [hidden]=\"loading\"\n      *ngFor=\"let message of messages\"\n      routerLink=\"{{\n        container === 'Outbox'\n          ? '/members/' + message.recipientUsername\n          : '/members/' + message.senderUsername\n      }}\"\n      [queryParams]=\"{ tab: 3 }\"\n    >\n      <td>{{ message.content }}</td>\n      <td>\n        <div *ngIf=\"container === 'Outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{\n              message.recipientPhotoUrl || './assets/default-avatar.jpg'\n            }}\"\n            alt=\"{{ message.recipientUsername }}\"\n          />\n          <strong>{{ message.recipientUsername | titlecase }}</strong>\n        </div>\n        <div *ngIf=\"container !== 'Outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{ message.senderPhotoUrl || './assets/default-avatar.jpg' }}\"\n            alt=\"{{ message.senderUsername }}\"\n          />\n          <strong>{{ message.senderUsername | titlecase }}</strong>\n        </div>\n      </td>\n      <td>{{ message.messageSent | timeago }}</td>\n      <td>\n        <button\n          (click)=\"$event.stopPropagation()\"\n          (click)=\"deleteMessage(message.id)\"\n          class=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgxGalleryModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 4000,\n      positionClass: 'toast-bottom-right',\n    }),\n    TabsModule.forRoot(),\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n  ],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          debugger;\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof error.error === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 401:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user?.roles.includes('Admin') || user?.roles.includes('Moderator'))\n          return true;\n        this.toastr.error('You cannot enter this area');\n        return false;\n      })\n    );\n  }\n}\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result!: T;\r\n  pagination!: Pagination;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles() {\n    return this.http.get<User[]>(this.baseUrl + 'admin/users-with-role');\n  }\n\n  updateUserRoles(username?: string, roles?: string[]) {\n    return this.http.post(\n      this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles,\n      {}\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/_modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_model/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss'],\n})\nexport class UserManagementComponent implements OnInit {\n  users!: User[];\n  bsModalRef!: BsModalRef;\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user),\n      },\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values: any) => {\n      const rolesToUpdate = {\n        roles: [\n          ...values\n            .filter((el: any) => el.checked === true)\n            .map((el: any) => el.name),\n        ],\n      };\n      if (rolesToUpdate) {\n        this.adminService\n          .updateUserRoles(user.username, rolesToUpdate.roles)\n          .subscribe(() => {\n            user.roles = [...rolesToUpdate.roles];\n          });\n      }\n    });\n  }\n\n  private getRolesArray(user: User) {\n    const roles: any[] = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach((role) => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%\">Username</th>\n      <th style=\"width: 40%\">Active roles</th>\n      <th style=\"width: 30%\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{ user?.username }}</td>\n      <td>{{ user?.roles }}</td>\n      <td>\n        <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\n          Edit role\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NgxGalleryAnimation,\n  NgxGalleryImage,\n  NgxGalleryOptions,\n} from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/internal/operators/take';\nimport { Member } from 'src/app/_model/member';\nimport { Message } from 'src/app/_model/message';\nimport { User } from 'src/app/_model/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.scss'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', { static: true }) memberTabs!: TabsetComponent;\n  member!: Member;\n  galleryOptions!: NgxGalleryOptions[];\n  galleryImages!: NgxGalleryImage[];\n  activeTab!: TabDirective;\n  messages: Message[] = [];\n  user!: User;\n\n  constructor(\n    private memberService: MembersService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    public presence: PresenceService,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user || new User()));\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.member = data.member;\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService\n      .getMessageThread(this.member.username)\n      .subscribe((messages) => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading == 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/default-avatar.jpg' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-img-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div\n          class=\"mb-2\"\n          *ngIf=\"(presence.onlineUsers$ | async)?.includes(member.username)\"\n        >\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\n        </div>\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">\n            Message\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab\n        heading=\"About {{ member.knownAs }}\"\n        (selectTab)=\"onTabActivated($event)\"\n      >\n        <h4>Description</h4>\n        <p>{{ member.information }}</p>\n        <h4>looking for</h4>\n        <p>{{ member.lookingFor }}</p>\n      </tab>\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\n        <h4>Interests</h4>\n        <p>{{ member.interests }}</p>\n      </tab>\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\n        <ngx-gallery\n          [options]=\"galleryOptions\"\n          [images]=\"galleryImages\"\n          style=\"display: inline-block; margin-bottom: 20px\"\n        ></ngx-gallery>\n      </tab>\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_model/user';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService){ }\n\n  canActivate(): Observable<boolean> {    \n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user) return true;\n        this.toastr.error('You shall not pass!');\n        return false;\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BusyService } from '../busy.service';\r\nimport { Group } from '../_model/group';\r\nimport { Message } from '../_model/message';\r\nimport { User } from '../_model/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection!: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]);\r\n      });\r\n    });\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some((x) => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop().catch((error) => console.log(error));\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber: number, pageSize: number, container: string) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'Messages/thread/' + username\r\n    );\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection\r\n      .invoke('SendMessage', {\r\n        recipientUsername: username,\r\n        content,\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_model/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.scss'],\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user!: User;\n  roles!: any[];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{ user.username }}</h4>\n  <button\n    type=\"button\"\n    class=\"close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"bsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [checked]=\"role.checked\"\n        value=\"role.name\"\n        (change)=\"role.checked = !role.checked\"\n        [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n      />\n      <label>{{ role.name }}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n    Cancel\n  </button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\n    Submit\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_model/member';\nimport { Pagination } from 'src/app/_model/pagination';\nimport { User } from 'src/app/_model/user';\nimport { UserParams } from 'src/app/_model/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  members!: Member[];\n  pagination!: Pagination;\n  userParams!: UserParams;\n  user!: User | null;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetFilters();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form\n    #form=\"ngForm\"\n    class=\"form-inline mb-3\"\n    (ngSubmit)=\"loadMembers()\"\n    autocomplete=\"off\"\n  >\n    <div class=\"form-group\">\n      <label>Age from:</label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"minAge\"\n        [(ngModel)]=\"userParams.minAge\"\n      />\n    </div>\n    <div class=\"form-group px-2\">\n      <label>Age to:</label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\"\n      />\n    </div>\n    <div class=\"form-group px-2\">\n      <label>Show:</label>\n      <select\n        class=\"form-control ml-1\"\n        [(ngModel)]=\"userParams.gender\"\n        name=\"gender\"\n        style=\"width: 130px\"\n      >\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{ gender.display }}\n        </option>\n      </select>\n    </div>\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">\n      Reset Filters\n    </button>\n    <div class=\"col\">\n      <div class=\"button-group float-right\">\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"lastActive\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Last Active\n        </button>\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"created\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Newest Members\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"row\">\n  <div *ngFor=\"let member of members\">\n    <app-member-card [member]=\"member\"></app-member-card>\n  </div>\n</div>\n<div class=\"d-flex justify-content-center mt-2\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333',\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_model/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private accountService: AccountService,\n    private presenceService: PresenceService\n  ) {}\n\n  ngOnInit(): void {\n    this.setCurrentUsers();\n  }\n  title = 'Dating App';\n  users: any;\n\n  setCurrentUsers() {\n    const u = localStorage.getItem('user');\n    const user: User = u != null ? JSON.parse(u) : null;\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presenceService.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\n  <h3>Loading...</h3>\n</ngx-spinner>\n<app-nav></app-nav>\n<div class=\"container\" style=\"margin-top: 100px\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(private busyService: BusyService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss'],\n})\nexport class ConfirmModalComponent implements OnInit {\n  title!: string;\n  message!: string;\n  btnOkText!: string;\n  btnCancelText!: string;\n  result!: boolean;\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n<div class=\"modal-body\">\n  {{ message }}\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender!: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 6;\r\n  orderBy = 'lastActive';\r\n\r\n  constructor(user: User | null) {\r\n    this.gender = user?.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_model/member';\nimport { PaginatedResult } from '../_model/pagination';\nimport { User } from '../_model/user';\nimport { UserParams } from '../_model/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  userParams!: UserParams;\n  user!: User | null;\n\n  constructor(\n    private httpClient: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    });\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(userParam: UserParams) {\n    this.userParams = userParam;\n  }\n\n  resetFilters() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) return of(response);\n\n    let params = getPaginationHeaders(\n      userParams.pageNumber,\n      userParams.pageSize\n    );\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(\n      this.baseUrl + 'users',\n      params,\n      this.httpClient\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      })\n    );\n  }\n\n  getMember(username: string | null) {\n    //\"find\" returns undefined if no value matches predicate\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.username === username);\n    if (member) return of(member);\n    return this.httpClient.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.httpClient.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    );\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.httpClient.put(\n      this.baseUrl + 'users/set-main-photo/' + photoId,\n      {}\n    );\n  }\n\n  deletePhoto(photoId: number) {\n    return this.httpClient.delete(\n      this.baseUrl + 'users/delete-photo/' + photoId\n    );\n  }\n\n  addLikes(username: string) {\n    return this.httpClient.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber: number, pageSize: number) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(\n      this.baseUrl + 'likes',\n      params,\n      this.httpClient\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { CastPipe } from './_pipe/cast.pipe';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './_modals/roles-modal/roles-modal.component';\nimport { ConfirmModalComponent } from './_modals/confirm-modal/confirm-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    ServerErrorComponent,\n    NotFoundComponent,\n    TextInputComponent,\n    CastPipe,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_model/member';\nimport { Photo } from 'src/app/_model/photo';\nimport { User } from 'src/app/_model/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.scss'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member!: Member;\n  uploader!: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  user!: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user || new User()));\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if (photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach((p) => {\n        if (p.isMain) p.isMain = false;\n        if (p.id == photo.id) p.isMain = true;\n      });\n    });\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter((x) => x.id !== photoId);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n    <img\n      src=\"{{ photo.url }}\"\n      alt=\"{{ photo.url }}\"\n      class=\"img-thumbnail p-1\"\n    />\n    <div class=\"text-center\">\n      <button\n        [disabled]=\"photo.isMain\"\n        (click)=\"setMainPhoto(photo)\"\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\n        class=\"btn btn-sm\"\n      >\n        Main\n      </button>\n      <button\n        [disabled]=\"photo.isMain\"\n        (click)=\"deletePhoto(photo.id)\"\n        class=\"btn btn-sm btn-danger\"\n      >\n        <i class=\"fa fa-trash\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"row mt-3\">\n  <div class=\"col-md-3\">\n    <h3>Add Photos</h3>\n    <div\n      ng2FileDrop\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\n      (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\"\n      class=\"card bd-faded p-3 text-center mb-3 my-drop-zone\"\n    >\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop photos down\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div\n    class=\"col-md-9\"\n    style=\"margin-bottom: 40px\"\n    *ngIf=\"uploader?.queue?.length\"\n  >\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td>\n            <strong>{{ item?.file?.name }}</strong>\n          </td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress\">\n          <div\n            class=\"progress-bar\"\n            role=\"progressbar\"\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\n          ></div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-success btn-s\"\n        (click)=\"uploader.uploadAll()\"\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\n      >\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-warning btn-s\"\n        (click)=\"uploader.cancelAll()\"\n        [disabled]=\"!uploader.isUploading\"\n      >\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-s\"\n        (click)=\"uploader.clearQueue()\"\n        [disabled]=\"!uploader.queue.length\"\n      >\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_model/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MemberDetailResolver implements Resolve<Member> {\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControl,\n  NgControl,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label!: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","<div class=\"form-group\">\n  <input\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type=\"{{ type }}\"\n    class=\"form-control\"\n    [formControl]=\"$any(ngControl.control)\"\n    placeholder=\"{{ label }}\"\n  />\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\n    Please enter a {{ label }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.minlength\" class=\"invalid-feedback\">\n    {{ label }} must be at least\n    {{ ngControl.control?.errors?.minlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.maxlength\" class=\"invalid-feedback\">\n    {{ label }} must be at most\n    {{ ngControl.control?.errors?.maxlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.isMatching\" class=\"invalid-feedback\">\n    Password do not match\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_model/member';\nimport { Pagination } from '../_model/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.scss'],\n})\nexport class ListsComponent implements OnInit {\n  members!: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination!: Pagination;\n\n  constructor(private memberService: MembersService) {}\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\n      .subscribe((response) => {\n        this.members = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{ predicate === \"liked\" ? \"Member I like\" : \"Member who like me\" }}</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"btn-group\" name=\"predicate\">\n      <button\n        class=\"btn btn-primary\"\n        btnRadio=\"liked\"\n        [(ngModel)]=\"predicate\"\n        (click)=\"loadLikes()\"\n      >\n        Members i like\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        btnRadio=\"likedBy\"\n        [(ngModel)]=\"predicate\"\n        (click)=\"loadLikes()\"\n      >\n        Members who like me\n      </button>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div *ngFor=\"let member of members\">\n      <app-member-card [member]=\"$any(member)\"></app-member-card>\n    </div>\n  </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_model/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  model:any = {};\n\n  constructor(public accountService: AccountService\n    ,private router: Router\n    ,private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.accountService.login(this.model).subscribe(user => {\n      this.router.navigateByUrl('/members');\n    }, error =>{  \n      this.toastr.error(error.error);\n    });\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }  \n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Dating App</a>\n    <ul class=\"navbar-nav mr-auto mb-2 mb-md-0\">\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/members\"\n            >Matched</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/lists\"\n            >List</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/messages\"\n            >Messages</a\n          >\n        </li>\n        <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/admin\"\n            >Admin</a\n          >\n        </li>\n      </ng-container>\n    </ul>\n    <div\n      class=\"dropdown\"\n      *ngIf=\"accountService.currentUser$ | async as user\"\n      dropdown\n    >\n      <img\n        src=\"{{ user.photoUrl || './assets/default-avatar.jpg' }}\"\n        alt=\"{{ user.username }}\"\n      />\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle\n        >Welcome {{ user.knownAs || user.username | titlecase }}</a\n      >\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" routerLink=\"/member/edit\">Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n    <form\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"login()\"\n      autocomplete=\"off\"\n    >\n      <input\n        name=\"username\"\n        [(ngModel)]=\"model.username\"\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        placeholder=\"Username\"\n      />\n      <input\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n        class=\"form-control mr-sm-2\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <button class=\"btn btn-outline-success\" type=\"submit\">Login</button>\n    </form>\n  </div>\n</nav>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_model/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.scss'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member!: Member;\n\n  constructor(\n    private memberService: MembersService,\n    private toastr: ToastrService,\n    public presence: PresenceService\n  ) {}\n\n  ngOnInit(): void {}\n\n  addLike(member: Member) {\n    this.memberService.addLikes(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    });\n  }\n}\n","<div class=\"container d-flex justify-content-center\">\n  <div class=\"card p-3 mt-3\">\n    <div class=\"first\">\n      <div\n        class=\"\n          time\n          d-flex\n          flex-row\n          align-items-center\n          justify-content-between\n          mt-3\n        \"\n      ></div>\n    </div>\n    <div class=\"second d-flex flex-row mt-2\">\n      <div class=\"image mr-3\">\n        <img\n          src=\"{{ member.photoUrl || './assets/default-avatar.jpg' }}\"\n          alt=\"{{ member.knownAs }}\"\n          class=\"rounded-circle\"\n          width=\"60\"\n        />\n      </div>\n      <div class=\"\">\n        <div class=\"d-flex flex-row mb-1\">\n          <a routerLink=\"/members/{{ member.username }}\"\n            >@{{ member.username }}</a\n          >\n          <div class=\"d-flex align-items-center\">\n            <span\n              class=\"is-online ml-1\"\n              *ngIf=\"(presence.onlineUsers$ | async)?.includes(member.username)\"\n              ><i class=\"fa fa-user mr-2\"></i\n            ></span>\n            <span\n              class=\"hour ml-1\"\n              *ngIf=\"\n                !(presence.onlineUsers$ | async)?.includes(member.username)\n              \"\n              ><i class=\"fa fa-clock-o clock\"></i>\n              {{ member.lastActive | timeago }}</span\n            >\n          </div>\n        </div>\n        <div>\n          <button\n            (click)=\"addLike(member)\"\n            class=\"btn btn-outline-dark btn-sm px-2\"\n          >\n            <i class=\"fa fa-heart\"></i>\n          </button>\n          <button\n            routerLink=\"/members/{{ member.username }}\"\n            class=\"btn btn-outline-dark btn-sm\"\n          >\n            See Profile\n          </button>\n          <button\n            routerLink=\"/members/{{ member.username }}\"\n            [queryParams]=\"{ tab: 3 }\"\n            class=\"btn btn-outline-dark btn-sm\"\n          >\n            <i class=\"fa fa-comment-o\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    <hr class=\"line-color\" />\n    <h6>{{ member.knownAs }}, {{ member.age }}</h6>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) {}\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch((error) => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([\n          ...usernames.filter((x) => x !== username),\n        ]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toastr\n        .info(knownAs + ' has sent you a new message')\n        .onTap.pipe(take(1))\n        .subscribe(() =>\n          this.router.navigateByUrl('/members/' + username + '?tab=3')\n        );\n    });\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch((error) => console.log(error));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cast',\n  pure: true,\n})\nexport class CastPipe implements PipeTransform {\n  transform<T>(value: T, args?: any): T {\n    return value;\n  }\n}\n","export class User {\r\n  username!: string;\r\n  token!: string;\r\n  photoUrl!: string;\r\n  knownAs!: string;\r\n  gender!: string;\r\n  roles!: string[];\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"User management\" *appHasRole=\"['Admin']\">\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_model/member';\nimport { User } from 'src/app/_model/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.scss'],\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm!: NgForm;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\n    $event: any\n  ) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  member!: Member;\n  user!: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService,\n    private toasterService: ToastrService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user || new User()));\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user?.username).subscribe((member) => {\n      this.member = member;\n    });\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toasterService.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    });\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n  <div class=\"col-4\">\n    <h1>Your profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n      <strong>Information: </strong>you have made changes, any unsaved changes\n      will lost\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/default-avatar.jpg' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-img-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          [disabled]=\"!editForm.dirty\"\n          form=\"editForm\"\n          class=\"btn btn-success btn-block\"\n        >\n          Save Changes\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"About {{ member.knownAs }}\">\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n          <h4>Description</h4>\n          <textarea\n            [(ngModel)]=\"member.information\"\n            class=\"form-control\"\n            name=\"information\"\n            rows=\"6\"\n          ></textarea>\n          <h4>Looking for</h4>\n          <textarea\n            [(ngModel)]=\"member.lookingFor\"\n            class=\"form-control\"\n            name=\"lookingFor\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea\n            [(ngModel)]=\"member.interests\"\n            class=\"form-control\"\n            name=\"interests\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Location Details:</h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City:</label>\n            <input\n              type=\"text\"\n              name=\"city\"\n              [(ngModel)]=\"member.city\"\n              class=\"form-control mx-2\"\n            />\n            <label for=\"country\">Country:</label>\n            <input\n              type=\"text\"\n              name=\"country\"\n              [(ngModel)]=\"member.country\"\n              class=\"form-control mx-2\"\n            />\n          </div>\n        </form>\n      </tab>\n      <tab heading=\"Edit Photos\">\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_model/pagination';\r\n\r\nexport function getPaginatedResult<T>(\r\n  url: string,\r\n  params: HttpParams,\r\n  http: HttpClient\r\n) {\r\n  const paginatedResults: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map((response) => {\r\n      paginatedResults.result = response.body as T;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResults.pagination = JSON.parse(\r\n          response.headers.get('Pagination') || ''\r\n        );\r\n      }\r\n      return paginatedResults;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'members',\n        component: MemberListComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'members/:username',\n        component: MemberDetailComponent,\n        resolve: { member: MemberDetailResolver },\n      },\n      {\n        path: 'member/edit',\n        component: MemberEditComponent,\n        canDeactivate: [PreventUnsavedChangesGuard],\n      },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },\n      {\n        path: 'admin',\n        component: AdminPanelComponent,\n        canActivate: [AdminGuard],\n      },\n    ],\n  },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', component: HomeComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, Observer } from 'rxjs';\nimport { ConfirmModalComponent } from '../_modals/confirm-modal/confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer: Observer<boolean>) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}